<!DOCTYPE html>
<html dir="rtl" lang="ar">

<!-- Mirrored from 7oroof.com/demos/steakin/homepage-arabic.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 07 Nov 2024 07:49:20 GMT -->
<head>
    <!-- Document Meta
    ============================================= -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!--IE Compatibility Meta-->
    <meta name="author" content="zytheme" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="description" content="Elegant Restaurant & Cafe Html5 Template by zytheme">
    <link href="~/assets/images/favicon/favicon.png" rel="icon">
        <script src="http://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Fonts
    ============================================= -->
    <link href="http://fonts.googleapis.com/css?family=Changa:200,300,400,500,600,700&amp;subset=arabic" rel="stylesheet">

    <!-- Stylesheets
    ============================================= -->
    <link href="~/assets/css/external.css" rel="stylesheet">
    <link href="~/assets/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/assets/css/style2.css" rel="stylesheet">
    <link type="text/css" href="~/assets/css/style-rtl1.css" rel="stylesheet" />
    <link type="text/css" href="~/assets/css/style-arabic.css" rel="stylesheet" />

    <!-- RS5.0 Main Stylesheet -->
    <link rel="stylesheet" type="text/css" href="~/assets/revolution/css/settings.css">
    <link rel="stylesheet" type="text/css" href="~/assets/revolution/css/layers.css">
    <link rel="stylesheet" type="text/css" href="~/assets/revolution/css/navigation.css">

    <!-- HTML5 shim, for IE6-8 support of HTML5 elements. All other JS at the end of file. -->
    <!--[if lt IE 9]>
      <script src="assets/js/html5shiv.js"></script>
      <script src="assets/js/respond.min.js"></script>
    <![endif]-->
    <!-- Document Title
    ============================================= -->
    <title>حلويات سلورة الشهباء</title>
    <style>.product-quantity button {
        background: none; /* Remove background */
        border: none; /* Remove border */
        color: black; /* Set text color to black */
        font-size: 18px; /* Adjust size to make the symbols clearer */
        cursor: pointer; /* Change cursor to pointer for better UX */
        padding: 0 10px; /* Add horizontal padding for spacing */
        line-height: 1; /* Remove extra space around symbols */
      }
      
      .product-quantity button:focus {
        outline: none; /* Remove focus outline */
      }
      #product-quantity button:focus {
        outline: none; /* Remove focus outline */
      }

/* Remove the up and down arrows from input type number in all browsers */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type="number"] {
    -moz-appearance: textfield; /* Remove the arrows for Firefox */
}

    /* Modal Styles */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1000; /* On top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0, 0, 0, 0.4); /* Black background with opacity */
}

.modal-content {
    background-color: #fff;
    margin: 10% auto; /* 10% from top and centered */
    padding: 20px;
    border-radius: 8px;
    width: 80%; /* 80% width of the screen */
    max-width: 400px; /* Max width for small form */
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    text-align: center; /* Centered text */
}

.close-btn {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close-btn:hover {
    color: #000;
}

.form-group {
    margin-bottom: 15px;
    text-align: right;
}

label {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
    color: #333;
}

.form-control {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
}

/* 2222222222222222222222222222 */
.cart-total-amount1 {
  background-color: white;
  border: 1px solid #eeeeee;
  border-radius: 1px;
  padding: 30px 20px 205px ;
}

.cart-total-amount1 h6 {
  color: #282828;
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 25px;
  position: relative;
}

.cart-total-amount1 ul li {
  color: #bb9356;
  font-size: 13px;
  font-weight: 600;
  line-height: 36px;
  text-transform: capitalize;
}

.cart-total-amount1 ul li span {
  color: #959595;
  font-size: 13px;
  font-weight: 400;
  line-height: 36px;
}
      
  
      
      </style>

  </head>

<body>
    <div class="preloader">
        <div class="spinner">
            <div class="bounce1"></div>
            <div class="bounce2"></div>
            <div class="bounce3"></div>
        </div>
    </div>
    <!-- Document Wrapper
    ============================================= -->
    <div id="wrapper" class="wrapper clearfix">
        <header id="navbar-spy" class="header header-1 header-transparent header-fixed">
            <nav id="primary-menu" class="navbar navbar-fixed-top">
                <div class="container">
                    <!-- Brand and toggle get grouped for better mobile display -->
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1" aria-expanded="false">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <a class="logo" href="index.html">
                            <img class="logo-light" src="~/assets/images/logo/logo-light.png" alt="Steakin Logo" draggable="false">
                            <img class="logo-dark" src="~/assets/images/logo/logo-dark.png" alt="Steakin Logo" draggable="false">
                        </a>
                    </div>

                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse pull-right" id="navbar-collapse-1">
                        <ul class="nav navbar-nav nav-pos-right navbar-left">
                            <!-- Home Menu -->
                            <li class="has-dropdown mega-dropdown active">
                                <a href="@Url.Action("Index", "Customer")" class="dropdown-toggle menu-item">الرئيسية</a>
                                <ul class="dropdown-menu">
                                </ul>
                                <!-- .mega-dropdown-menu end -->
                            </li>

                            <li >
                                <a href="@Url.Action("AboutUs", "Customer")" class="link-hover">من نحن</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Menu", "Customer")" class="link-hover">المنيو</a>
                            </li>

                            <li >
                                <a href="@Url.Action("Branches", "Customer")" class="link-hover">فروعنا</a>
                            </li>
                            <li>
                                <a href="@Url.Action("FAQ", "Customer")" class="link-hover">الأسئلة الشائعة</a>

                            </li>

                            <li>
                                <a href="@Url.Action("Shop", "Customer")" class="link-hover">تسوق</a>
                            </li>

                            <li>
                                <a href="@Url.Action("OrderHistory", "Customer")" class="link-hover">سجل الطلبات</a>
                            </li>

                             <li>
                                <a href="@Url.Action("Settings", "Customer")" class="link-hover">الاعدادات</a>
                            </li>

                        </ul>


                        <div class="module module-reservation pull-left">
                            <a href="@Url.Action("Index", "Home")" class="btn-popup btn-popup-theme" data-target="#reservationModule">تسجيل الخروج</a>
                        </div>

                        <!-- Module Reservation (Same Modal for Sign In) -->
                        <!-- Module Cart -->
                        <div class="module module-cart pull-left">
                            <div class="module-icon cart-icon" data-url="@Url.Action("Cart", "Customer")">
                                <i class="fa fa-shopping-cart"></i>
                                <span class="title">الطلبات</span>
                                <label class="module-label">0</label>
                            </div>
                        </div>
                        <!-- .module-cart end -->
                        <!-- Module Search -->
                        <div class="module module-search pull-left">
                            <div class="module-icon search-icon">
                                <i class="fa fa-search"></i>
                                <span class="title">بحث</span>
                            </div>
                            <div class="module-content module-fullscreen module--search-box">
                                <div class="pos-vertical-center">
                                    <div class="container">
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-8 col-md-offset-2">
                                                <form class="form-search">
                                                    <input type="text" class="form-control" placeholder="اكتب كلمات البحث...">
                                                    <button class="btn" type="button"><i class="fa fa-search"></i></button>
                                                </form>
                                                <!-- .form-search end -->
                                            </div>
                                            <!-- .col-md-8 end -->
                                        </div>
                                        <!-- .row end -->
                                    </div>
                                    <!-- .container end -->
                                </div>
                                <a class="module-cancel" href="#"><i class="fa fa-times"></i></a>
                            </div>
                        </div>
                        <!-- .module-search end -->
                        <!-- Module Side NAV -->
                        <div class="module module-side-nav pull-left">
                            <div class="module-icon side-nav-icon">
                                <i class="fa fa-bars"></i>
                                <span class="title">Side Navigation</span>
                            </div>
                            <div class="module-content module-hamburger">
                                <div class="hamburger-panel module-widgets" style="max-height: 80vh; overflow-y: auto;">
                                    <!-- Facebook Feed -->
                                    <div class="widget widget-facebook">
                                        <div class="widget--title">
                                            <h5>فيسبوك</h5>
                                        </div>
                                        <div class="widget--content">
                                            <div class="fb-page"
                                                 data-href="https://www.facebook.com/ALshahbaaSweets"
                                                 data-tabs="timeline"
                                                 data-width="500"
                                                 data-height="300"
                                                 data-small-header="false"
                                                 data-adapt-container-width="true"
                                                 data-hide-cover="false"
                                                 data-show-facepile="true">
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                    <!-- .widget-facebook end -->
                                    <!-- Instagram Feed -->
                                    <div class="widget widget-instagram">
                                        <div class="widget--title">
                                            <h5>إنستجرام</h5>
                                        </div>
                                        <div class="widget--content" style="max-height: 80vh; overflow-y: auto; margin: auto;">
                                            <blockquote class="instagram-media"
                                                        data-instgrm-permalink="https://www.instagram.com/p/DC69YtXtavy/"
                                                        data-instgrm-version="14"
                                                        style="max-width: 100%; padding: 0; border: none; overflow: hidden; margin: auto;">
                                            </blockquote>
                                            <script async src="https://www.instagram.com/embed.js"></script>
                                        </div>
                                    </div>
                                    <!-- .widget-instagram end -->
                                    <!-- Tag Clouds -->
                                    <div class="widget widget-tags">
                                        <div class="widget--title">
                                            <h5>الأوسمة</h5>
                                        </div>
                                        <div class="widget--content">
                                            <a href="#">حلاوة الجبن</a>
                                            <a href="#">حلاوة الجبن بالقشطة</a>
                                            <a href="#">العروض الخاصة</a>
                                            <a href="#">منتجاتنا</a>
                                        </div>
                                    </div>
                                    <!-- .widget-tags end -->

                                    <a class="module-cancel" href="#" onclick="event.stopPropagation(); closeSideNav();">
                                        <i class="fa fa-times"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <!-- /.module-side-nav -->
                    </div>
                    <!-- /.navbar-collapse -->
                </div>
                <!-- /.container-fluid -->
            </nav>
        </header>

<!-- Page Title #1
		============================================= -->
		<section id="page-title" class="page-title bg-overlay bg-parallax bg-overlay-gradient">
			<div class="bg-section">
				<img src="~/assets/images/page-title/7.jpg" alt="Background" />
			</div>
			<div class="container">
				<div class="row">
					<div class="col-xs-12 col-sm-12 col-md-12">
						<div class="title title-1 text-center">
							<div class="title--content">
								<div class="title--subtitle">حلويات سلورة الشهباء</div>
								<div class="title--heading">
									<h1>سلة التسوق</h1>
								</div>
							</div>
							<div class="clearfix"></div>

							<div class="divider--shape-1down"></div>
						</div>
						<!-- .title end -->
					</div>
					<!-- .col-md-12 end -->
				</div>
				<!-- .row end -->
			</div>
			<!-- .container end -->
		</section>

<!-- Shop Cart ============================================= -->
<section id="shopcart" class="shop shop-cart bg-white">
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12" style="direction: rtl;">
                <div class="cart-table table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr class="cart-product">
                                <th class="cart-product-item">الصنف</th>
                                <th class="cart-product-price">السعر</th>
                                <th class="cart-product-quantity">الكمية</th>
                                <th class="cart-product-total">المجموع</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Cart items will be dynamically added here -->
                        </tbody>
                    </table>
                </div>
            </div>
            
                <!-- .cart-table end -->
            </div>
            <div class="col-xs-12 col-sm-12 col-md-6 mb-30-xs mb-30-sm">
                <div class="cart-shiping">
                    <h6>اختر موقعك </h6>
                    <div class="row">
                        <!-- Map Container -->
                        <div class="col-xs-12 col-md-12 mb-15">
                            <div id="map" style="height: 250px; width: 100%;"></div> <!-- Smaller map height for better layout -->
                        </div>
            
                       
            
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div style="text-align: center; direction: rtl;">
                              <ul style="list-style-type: disc; padding: 0px 30px; text-align: right; list-style-position: inside;">
                                <li><strong>المسافة:</strong> <span id="distance">0</span> كم</li>
                                <li id="displayRegionName"><strong>الموقع المحدد:</strong></li>
                                <li><strong>سعر التوصيل:</strong> <span id="deliveryPrice">0</span> دينار أردني</li>
                                <li id="nearestBranch"><strong>أقرب فرع:</strong></li>
                              </ul>
                            </div>
                          </div>
                          
                          
                          
            
                        <!-- Order Form for Submission -->
                        <div class="col-md-12">
                                <input type="hidden" id="customerLata" name="customerLat">
                                <input type="hidden" id="customerLnga" name="customerLng">
                                <input type="hidden" id="deliveryCost" name="deliveryCost">
                                <input type="hidden" id="distanceToBranch" name="distanceToBranch">
                                <input type="hidden" id="RegionName" name="RegionName">
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-sm-12 col-md-6">
                <div class="delivery-options">
                    <h6>طريقة التوصيل</h6>
                    <select id="delivery-option" class="form-control">
                        <option value="delivery">توصيل</option>
                        <option value="pickup">استلام</option>
                        
                    </select>
                    <div id="pickup-branches" class="pickup-branches" style="display: none; margin-top: 10px;">
                        <h6> اختر فرع للاستلام</h6>
                        <select id="branchSelect" class="form-control">
                            <option value="jubeiha">فرع الجبيهة</option>
<option value="dabouq">فرع دابوق</option>
<option value="khalda">فرع خلدا</option>
<option value="madinah-street">فرع شارع المدينة</option>
<option value="jabal-hussein">فرع جبل الحسين</option>
<option value="balad">فرع البلد</option>

                        </select>
                    </div>
                </div>
                    <div class="cart-total-amount1">
                        <h6>إجمالي سلة التسوق :</h6>
                        <ul class="list-unstyled" style="direction: ; text-align: ; padding: 20px;">
                            <li style="border-bottom: 1px solid #ccc; padding-bottom: 2px; margin-bottom: 2px;">
                                المجموع الفرعي : <span id="cart-subtotal" class="pull-right text-right">0.00 JD</span>
                            </li>
                            <li style="border-bottom: 1px solid #ccc; padding-bottom: 2px; margin-bottom: 2px;">
                                الشحن : <span id="shipping-cost" class="pull-right text-right"></span>
                            </li>
                            <li style="border-bottom: 1px solid #ccc; padding-bottom: 2px; margin-bottom: 2px;">
                                المجموع الكلي : <span id="order-total" class="pull-right text-right">0.00 JD</span>
                            </li>
                        </ul>
                        

                         <!-- Coupon Code Input -->
                     <div class="col-xs-12 col-md-12 mb-15">
                        <input type="text" id="couponCodeInput" class="form-control" placeholder="أدخل الكوبون هنا">
                        <button type="button" class="btn btn--primary btn--block add-to-cart-btn" onclick="applyCoupon()" style="display: block; width: 100%;">تطبيق الكوبون</button>
                     </div>
                    </div>
   </div>
        </div>


        <div class="form-group" style="width: 64%; margin: 10px auto 20px ;">
            <label for="addressInput">ملاحظات</label>
            <input type="text" id="addressInput" class="form-control" placeholder="أدخل ملاحظاتك هنا" style="width: 100%;">
        </div>
        
        <button id="checkoutButton" class="btn btn--primary btn--block add-to-cart-btn" style="width: 64%; margin: 0 auto; display: block;">تسجيل الطلب</button>
        
        <!-- .row end -->
    </div> </div>
    <!-- .container end -->
<!-- #shopcart end -->


<!-- footer#1
============================================= -->
<footer id="footer" class="footer footer-1 text-center">
  <div class="divider--shape-dark"></div>
  <!-- Widget Section
============================================= -->
  <div class="footer--widget text--center">
      <div class="container">
          <div class="row">
              <div class="col-xs-12 col-sm-6 col-md-4">
                  <div class="footer--widget-content">
                      <h3>تابعونا على وسائل التواصل</h3>
                      <div class="footer--social-icons">
                        <a href="https://www.instagram.com/alshahbaasweets?igsh=ZXY5bTlrdnFqaHNz" target="_blank">
                          <i class="fa fa-instagram"></i>
                      </a>
                      <a href="https://www.facebook.com/ALshahbaaSweets?mibextid=ZbWKwL" target="_blank">
                          <i class="fa fa-facebook"></i>
                      </a>
                      
                      </div>
                      <!-- .social-icons end -->
                  </div>
              </div>
              <!-- .col-md-4 end -->
              <div class="col-xs-12 col-sm-6 col-md-4">
                  <div class="footer--widget-content">
                                <img class="mb-20" src="~/assets/images/logo/logo-light.png" alt="logo">
                      <p>في سلورة، نضع شغفنا في كل طبق نقدمه. استمتعوا بأفضل الحلويات والمأكولات التي تعكس أصالة الطابع الشرقي بلمسة عصرية. اجعلوا لحظاتكم الخاصة أكثر تميزًا معنا.</p>
                  </div>
              </div>
              <!-- .col-md-3 end -->

              <div class="col-xs-12 col-sm-6 col-md-4">
                  <div class="footer--widget-content">
                      <h3>ساعات عملنا</h3>
                      <div class="widget--newsletter" dir="rtl">
                        <form class="footer--social-newsletter">
                            <input type="text" name="working-hours" class="form-control" placeholder="السبت - الأربعاء: 8 صباحًا - 12 منتصف الليل" disabled>
                        </form>
                    </div>
                    <br>
                    <div class="widget--newsletter" dir="rtl">
                      <form class="footer--social-newsletter">
                        <input type="text" name="working-hours" class="form-control" placeholder="الخميس - الجمعة: 8 صباحًا - 1:00 صباحًا" disabled>
                      </form>
                  </div>
                      <!-- .widget end -->
                  </div>
              </div>
              <!-- .col-md-3 end -->
          </div>
      </div>
      <!-- .container end -->
  </div>
  <!-- .footer-widget end -->
  <!-- Copyrights
============================================= -->
  <div class="footer--copyright text-center">
      <div class="divider--shape-dark2"></div>
      <div class="container">
          <div class="row">
              <div class="col-xs-12 col-sm-5 col-md-12">
                  <div class="contact-info">
                  
                      <span> <a href="tel:+962798002800" dir="ltr"> +962 7 9199 1212 </a></span> -
                      <span><a href="mailto:order@aghatisweets.com">order@aghatisweets.com</a></span>
                  </div>
              </div>
              <div class="col-xs-12 col-sm-5 col-md-12">
                <span>&copy; جميع الحقوق محفوظة لسلورة الشهباء 2024</span>
            </div>
            
          </div>
      </div>
      <!-- .container end -->
  </div>
  <!-- .footer-copyright end -->
</footer>
</div>
<!-- #wrapper end -->

<!-- Footer Scripts
============================================= -->
<script data-cfasync="false" src="../../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="~/assets/js/jquery-2.2.4.min.js"></script>
<script src="~/assets/js/plugins.js"></script>
    <script src="~/assets/js/functions.js"></script>
<!-- RS5.0 Core JS Files -->
    <script src="~/assets/revolution/js/jquery.themepunch.tools.min838f.js?rev=5.0"></script>
    <script src="~/assets/revolution/js/jquery.themepunch.revolution.min838f.js?rev=5.0"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.video.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.slideanims.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.actions.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.layeranimation.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.kenburn.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.navigation.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.migration.min.js"></script>
    <script src="~/assets/revolution/js/extensions/revolution.extension.parallax.min.js"></script>
<!-- RS Configration JS Files -->
    <script src="~/assets/js/rsconfig.js"></script>
    <script async src="//www.instagram.com/embed.js"></script>


    <!-- Facebook SDK Script -->
    <div id="fb-root"></div>
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v15.0" nonce="XnIuYmj5"></script>

    <script>
        // Prevent immediate disappearance of the side navigation
        document.querySelector('.module-side-nav').addEventListener('click', function (e) {
            e.stopPropagation();
        });

        // Function to close the side nav
        function closeSideNav() {
            document.querySelector('.module-side-nav').style.display = 'none';
        }
    </script>



    @* ================================================================ *@
<!-- Make sure this script is loaded after the DOM is fully loaded -->
<script>
    // Function to update both delivery price and shipping in "Cart Totals"
    function updateCartTotals() {
        const cartItems = JSON.parse(localStorage.getItem("cart")) || [];
        const cartSubtotalElement = document.getElementById("cart-subtotal");
        const shippingCostElement = document.getElementById("shipping-cost");
        const orderTotalElement = document.getElementById("order-total");
        const deliveryPriceElement = document.getElementById("deliveryPrice");
        const deliveryCost = parseFloat(document.getElementById("deliveryCost").value) || 0;

        let subtotal = 0;
        cartItems.forEach(item => {
            subtotal += item.price * item.quantity;
        });

        const orderTotal = subtotal + deliveryCost;

        // Update the DOM elements
        cartSubtotalElement.textContent = `${subtotal.toFixed(2)} JD`;
        shippingCostElement.textContent = `${deliveryCost.toFixed(2)} JD`; // Use deliveryCost directly
        deliveryPriceElement.textContent = `${deliveryCost.toFixed(2)} JD`; // Use deliveryCost for Delivery Price
        orderTotalElement.textContent = `${orderTotal.toFixed(2)} JD`;
    }

    document.addEventListener("DOMContentLoaded", () => {
        const cartContainer = document.querySelector(".cart-table tbody");

        // Function to load all cart items from local storage and render them
        function loadCartItems() {
            const cart = JSON.parse(localStorage.getItem("cart")) || [];

            if (cart.length === 0) {
                cartContainer.innerHTML = `
                    <tr>
                        <td colspan="4" class="text-center">لا يوجد عناصر في السلة</td>
                    </tr>`;
                updateCartCount();
                updateCartTotals(); // Ensure totals are updated even when the cart is empty
                return;
            }

            cartContainer.innerHTML = ""; // Clear existing content

            cart.forEach((item, index) => {
                const totalPrice = (item.price * item.quantity).toFixed(2);
                const cartItemHTML = `
                    <tr class="cart-product">
                        <td class="cart-product-item">
                            <div class="cart-product-name">
                                <h6>${item.name} - ${item.amount}</h6>
                            </div>
                        </td>
                        <td class="cart-product-price">${item.price} JDs</td>
                        <td class="cart-product-quantity">
                            <div class="product-quantity">
                                <button class="quantity-decrease" data-index="${index}">-</button>
                                <input type="number" value="${item.quantity}" min="1" class="quantity-input" data-index="${index}"/>
                                <button class="quantity-increase" data-index="${index}">+</button>
                            </div>
                        </td>
                        <td class="cart-product-total">${totalPrice} JDs</td>
                    </tr>`;
                cartContainer.innerHTML += cartItemHTML;
            });

            initializeQuantityChange();
        }

        // Function to handle quantity changes and button clicks
        function initializeQuantityChange() {
            const quantityInputs = document.querySelectorAll(".quantity-input");
            quantityInputs.forEach((input) => {
                input.addEventListener("change", (event) => {
                    const index = event.target.getAttribute("data-index");
                    const newQuantity = parseInt(event.target.value);

                    if (newQuantity < 1) return;

                    let cart = JSON.parse(localStorage.getItem("cart")) || [];
                    cart[index].quantity = newQuantity;
                    localStorage.setItem("cart", JSON.stringify(cart));

                    loadCartItems();
                    updateCartTotals();
                });
            });

            const decreaseButtons = document.querySelectorAll(".quantity-decrease");
            decreaseButtons.forEach((button) => {
                button.addEventListener("click", (event) => {
                    const index = event.target.getAttribute("data-index");
                    let cart = JSON.parse(localStorage.getItem("cart")) || [];

                    if (cart[index].quantity === 1) {
                        cart.splice(index, 1);
                    } else {
                        cart[index].quantity -= 1;
                    }

                    localStorage.setItem("cart", JSON.stringify(cart));
                    loadCartItems();
                    updateCartTotals();
                });
            });

            const increaseButtons = document.querySelectorAll(".quantity-increase");
            increaseButtons.forEach((button) => {
                button.addEventListener("click", (event) => {
                    const index = event.target.getAttribute("data-index");
                    let cart = JSON.parse(localStorage.getItem("cart")) || [];
                    cart[index].quantity += 1;
                    localStorage.setItem("cart", JSON.stringify(cart));
                    loadCartItems();
                    updateCartTotals();
                });
            });
        }

        // Function to update the cart count in the header
        function updateCartCount() {
            const cart = JSON.parse(localStorage.getItem("cart")) || [];
            const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
            const cartCountLabel = document.querySelector(".module-label");
            if (cartCountLabel) {
                cartCountLabel.textContent = totalItems;
            }
        }

        // Load cart items and update cart count on page load
        loadCartItems();
        updateCartCount();
    });

    // Redirect to the shop-cart.html page when cart icon is clicked
    document.querySelector(".module-icon.cart-icon").addEventListener("click", () => {
        window.location.href = "@Url.Action("Cart", "Customer")";
    });
</script>








@* ================================================================ *@
 <script>
    document.addEventListener("DOMContentLoaded", () => {
        const cartContainer = document.querySelector(".cart-table tbody");

        // Function to initialize cart totals to 0
        function initializeCartTotals() {
            document.getElementById("cart-subtotal").textContent = `0.00 JD`;
            document.getElementById("shipping-cost").textContent = `0.00 JD`;
            document.getElementById("order-total").textContent = `0.00 JD`;
            document.getElementById("deliveryPrice").textContent = `0.00 JD`;
        }

        // Function to load all cart items from local storage and render them
        function loadCartItems() {
            const cart = JSON.parse(localStorage.getItem("cart")) || [];

            if (cart.length === 0) {
                cartContainer.innerHTML = `
                    <tr>
                        <td colspan="4" class="text-center">لا يوجد عناصر في السلة</td>
                    </tr>`;
                updateCartCount();
                initializeCartTotals(); // Set all values to zero
                return;
            }

            cartContainer.innerHTML = ""; // Clear existing content

            cart.forEach((item, index) => {
  const totalPrice = (item.price * item.quantity).toFixed(2); // Ensure price is numeric
  const cartItemHTML = `
    <tr class="cart-product">
      <td class="cart-product-item">
        <div class="cart-product-name">
          <h6>${item.name} - ${item.amount}</h6>
        </div>
      </td>
      <td class="cart-product-price">${item.price} JDs</td>
      <td class="cart-product-quantity">
        <div class="product-quantity">
          <button class="quantity-decrease" data-index="${index}">-</button>
          <input type="number" value="${item.quantity}" min="1" class="quantity-input" data-index="${index}" />
          <button class="quantity-increase" data-index="${index}">+</button>
        </div>
      </td>
      <td class="cart-product-total">${totalPrice} JDs</td>
    </tr>`;
  cartContainer.innerHTML += cartItemHTML;
});


            initializeQuantityChange();
        }

        // Function to handle quantity changes and button clicks
        function initializeQuantityChange() {
            const quantityInputs = document.querySelectorAll(".quantity-input");
            quantityInputs.forEach((input) => {
                input.addEventListener("change", (event) => {
                    const index = event.target.getAttribute("data-index");
                    const newQuantity = parseInt(event.target.value);

                    if (newQuantity < 1) return;

                    let cart = JSON.parse(localStorage.getItem("cart")) || [];
                    cart[index].quantity = newQuantity;
                    localStorage.setItem("cart", JSON.stringify(cart));

                    loadCartItems();
                    updateCartTotals();
                });
            });

            const decreaseButtons = document.querySelectorAll(".quantity-decrease");
            decreaseButtons.forEach((button) => {
                button.addEventListener("click", (event) => {
                    const index = event.target.getAttribute("data-index");
                    let cart = JSON.parse(localStorage.getItem("cart")) || [];

                    if (cart[index].quantity === 1) {
                        cart.splice(index, 1);
                    } else {
                        cart[index].quantity -= 1;
                    }

                    localStorage.setItem("cart", JSON.stringify(cart));
                    loadCartItems();
                    updateCartTotals();
                });
            });

            const increaseButtons = document.querySelectorAll(".quantity-increase");
            increaseButtons.forEach((button) => {
                button.addEventListener("click", (event) => {
                    const index = event.target.getAttribute("data-index");
                    let cart = JSON.parse(localStorage.getItem("cart")) || [];
                    cart[index].quantity += 1;
                    localStorage.setItem("cart", JSON.stringify(cart));
                    loadCartItems();
                    updateCartTotals();
                });
            });
        }

        // Function to update the cart count in the header
        function updateCartCount() {
            const cart = JSON.parse(localStorage.getItem("cart")) || [];
            const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
            const cartCountLabel = document.querySelector(".module-label");
            if (cartCountLabel) {
                cartCountLabel.textContent = totalItems;
            }
        }

        // Initialize cart totals on page load
        initializeCartTotals();

        // Load cart items and update cart count on page load
        loadCartItems();
        updateCartCount();
    });

    // Redirect to the shop-cart.html page when cart icon is clicked
    document.querySelector(".module-icon.cart-icon").addEventListener("click", () => {
        window.location.href = "@Url.Action("Cart", "Customer")";
    });
</script>








@* ================================================================ *@

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCL2XYQajTD9FLX3HfqyE-vqznotsebQoc&callback=initMap" async></script>
<script>
    var map;
    var marker;
    var userLocation;
    var branches = [
        { name: "فرع جبيهة", lat: 32.02895262632643, lng: 35.86600175767264 },
        { name: "فرع دابوق", lat: 31.997884526122316, lng: 35.83070783137135 },
        { name: "فرع خلدا", lat: 31.996796677093908, lng: 35.85302909308664 },
        { name: "فرع شارع المدينة", lat: 31.964125173988194, lng: 35.86456785056214 },
        { name: "فرع جبل الحسين", lat: 31.960827461703907, lng: 35.928290038863715 },
        { name:" فرع البلد", lat: 31.951858851077418, lng: 35.9355706203122 }
    ];

    function initMap() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                function (position) {
                    userLocation = { lat: position.coords.latitude, lng: position.coords.longitude };
                    map = new google.maps.Map(document.getElementById("map"), {
                        zoom: 15,
                        center: userLocation
                    });
                    reverseGeocode(userLocation);

                    marker = new google.maps.Marker({
                        position: userLocation,
                        map: map,
                        title: "Your Location"
                    });

                    calculateDistances(userLocation, branches);

                    google.maps.event.addListener(map, 'click', function (event) {
                        updateLocation(event.latLng);
                    });
                },
                function (error) {
                    console.error("Geolocation error:", error);
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            alert("User denied the request for Geolocation.");
                            break;
                        case error.POSITION_UNAVAILABLE:
                            alert("Location information is unavailable.");
                            break;
                        case error.TIMEOUT:
                            alert("The request to get user location timed out.");
                            break;
                        case error.UNKNOWN_ERROR:
                            alert("An unknown error occurred.");
                            break;
                    }
                }
            );
        } else {
            alert("Error: Your browser does not support geolocation.");
        }
    }

    function updateLocation(clickedLocation) {
        userLocation = { lat: clickedLocation.lat(), lng: clickedLocation.lng() };
        marker.setPosition(clickedLocation);
        document.getElementById("customerLata").value = userLocation.lat;
        document.getElementById("customerLnga").value = userLocation.lng;
        calculateDistances(clickedLocation, branches);
        reverseGeocode(clickedLocation);
    }
    let nearestBranchName = "";

    function calculateDistances(userLocation, branches) {
        var service = new google.maps.DistanceMatrixService();
        var destinations = branches.map(branch => new google.maps.LatLng(branch.lat, branch.lng));

        service.getDistanceMatrix({
            origins: [userLocation],
            destinations: destinations,
            travelMode: google.maps.TravelMode.DRIVING,
        }, function (response, status) {
            if (status === "OK") {
                var nearestBranch = getNearestBranch(response);
                var distance = nearestBranch.distance / 1000; // Convert to km
                var deliveryPrice = calculateDeliveryPrice(distance);

                document.getElementById("distance").innerText = distance.toFixed(2);
                document.getElementById("deliveryPrice").innerText = deliveryPrice.toFixed(2); // Delivery Price under the map
                document.getElementById("nearestBranch").innerHTML = "<strong>أقرب فرع: </strong>" + nearestBranch.branch.name;
                document.getElementById("deliveryCost").value = deliveryPrice; // Set deliveryCost in the input field
                nearestBranchName = nearestBranch.branch.name;

                // Call updateCartTotals to synchronize shipping cost in Cart Totals
                updateCartTotals();
            } else {
                console.error("DistanceMatrix service error:", status);
            }
        });
    }

    function reverseGeocode(latLng) {
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'location': latLng }, function (results, status) {
            if (status === 'OK' && results[0]) {
                var regionName = "";
                results[0].address_components.forEach(component => {
                    if (component.types.includes("sublocality_level_1") || component.types.includes("neighborhood")) {
                        regionName = component.long_name;
                    }
                });
                if (!regionName) {
                    regionName = results[0].formatted_address;
                }
                document.getElementById("RegionName").value = regionName;
                document.getElementById("displayRegionName").innerHTML = "<strong>الموقع المحدد:</strong> " + regionName;
            
            } else {
                console.error("Geocode failed:", status);
            }
        });
    }

    function getNearestBranch(response) {
        var minDistance = Infinity;
        var nearestBranch = null;
        for (var i = 0; i < response.rows[0].elements.length; i++) {
            var distance = response.rows[0].elements[i].distance.value;
            if (distance < minDistance) {
                minDistance = distance;
                nearestBranch = branches[i];
            }
        }
        return { branch: nearestBranch, distance: minDistance };
    }

    function calculateDeliveryPrice(distance) {
        var basePrice = 1.20;
        var pricePerKm = 0.25;
        return basePrice + (pricePerKm * distance);
    }
</script>




<script>document.addEventListener("DOMContentLoaded", () => {
    // Get references to the dropdown and branches section
    const deliveryOption = document.getElementById("delivery-option");
    const pickupBranches = document.getElementById("pickup-branches");
    const shippingCostElement = document.getElementById("shipping-cost"); // Reference to the Shipping Cost element
    const deliveryCostInput = document.getElementById("deliveryCost"); // Hidden input for delivery cost

    // Function to handle delivery option change
    deliveryOption.addEventListener("change", () => {
        const selectedOption = deliveryOption.value;

        if (selectedOption === "pickup") {
            // Show the branches dropdown and set shipping to 0
            pickupBranches.style.display = "block";
            shippingCostElement.textContent = "0.00 JD"; // Set shipping cost to 0
            deliveryCostInput.value = 0; // Set the hidden delivery cost input to 0
            updateCartTotals(); // Update the cart totals to reflect the zero shipping cost
        } else if (selectedOption === "delivery") {
            // Hide the branches dropdown and show SweetAlert
            pickupBranches.style.display = "none";
            Swal.fire({
                title: "توصيل",
                text: "الرجاء اختار موقعك من الخريطه",
                icon: "info",
                confirmButtonText: "حسناً"
            });
            // Reset the shipping cost to the calculated delivery price
            const deliveryCost = parseFloat(deliveryCostInput.value) || 0;
            shippingCostElement.textContent = `${deliveryCost.toFixed(2)} JD`;
            updateCartTotals(); // Update the cart totals with the delivery cost
        }
    });
});
</script>


<script>
  function applyCoupon() {
    // Get the coupon name entered by the user
    const couponName = document.getElementById("couponCodeInput").value.trim();

    // Check if the couponName is provided
    if (!couponName) {
        Swal.fire({
            title: "خطأ",
            text: "الرجاء إدخال اسم الكوبون",
            icon: "error",
            confirmButtonText: "حسناً"
        });
        return;
    }

    // Log the coupon details
    console.log("Applying coupon:", couponName);

    // Build the API URL using the parameters
    const apiUrl = `http://localhost:5097/api/Order/ApplyCoupon?couponName=${encodeURIComponent(couponName)}&orderAmount=${getCartSubtotal()}&deliveryFee=${getShippingCost()}`;

    // Make an AJAX request to apply the coupon using GET method
    fetch(apiUrl, {
        method: "GET",
        headers: {
            "Accept": "application/json"
        }
    })
    .then(response => {
        console.log("Response:", response);

        // Check if the response is OK
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        // Parse the response as JSON
        return response.json();
    })
    .then(data => {
        console.log("API Response Data:", data);

        // Check if the coupon is valid and the new total is returned
        if (data.message && data.message === "Coupon applied successfully") {
            // Get the original total before discount
            const originalTotal = getCartSubtotal() + getShippingCost();

            // Get the new total from the API response
            const newTotal = parseFloat(data.newTotal) || 0; // Ensure newTotal is a valid number

            // Calculate the discount amount
            const discountAmount = originalTotal - newTotal;

            // Update the cart total in the DOM
            document.getElementById("order-total").textContent = `${newTotal.toFixed(2)} JD`;

            // Show a success alert with the discount amount
            Swal.fire({
                title: "نجاح",
                text: `تم خصم ${discountAmount.toFixed(2)} دينار من المبلغ الإجمالي.`,
                icon: "success",
                confirmButtonText: "حسناً"
            });
        } else {
            // If the coupon is not valid, show an error message
            Swal.fire({
                title: "خطأ",
                text: "الكوبون غير صحيح",
                icon: "error",
                confirmButtonText: "حسناً"
            });
        }
    })
    .catch(error => {
        // Handle errors
        console.error("Error applying coupon:", error);
        Swal.fire({
            title: "خطأ",
            text: "حدث خطأ أثناء تطبيق الكوبون. حاول مرة أخرى",
            icon: "error",
            confirmButtonText: "حسناً"
        });
    });
}



// Helper functions to get cart subtotal and shipping cost
function getCartSubtotal() {
    const subtotalText = document.getElementById("cart-subtotal").textContent;
    return parseFloat(subtotalText.replace(" JD", "")) || 0; // Parse as float and handle invalid values
}



function getShippingCost() {
    const shippingText = document.getElementById("shipping-cost").textContent;
    return parseFloat(shippingText.replace(" JD", "")) || 0; // Parse as float and handle invalid values
}


</script>



@* 
     ///////////////////////////////////////////////////
      ///////////////////////////////////////////////////
       ///////////////////////////////////////////////////
        ///////////////////////////////////////////////////
    ///////////////////////////////////////////////////
 *@





 <script>
    document.getElementById("checkoutButton").addEventListener("click", function () {
        const userId = localStorage.getItem("userId");
        if (!userId) {
            // Redirect to login if user is not logged in
            window.location.href = "/login.html";
            return;
        }

        // Fetch user details
        getUserDetails(userId).then(userDetails => {
            if (userDetails) {
                createOrder(userDetails);
            }
        }).catch(error => {
            Swal.fire({
                title: "خطأ",
                text: "لم نتمكن من تحميل بيانات المستخدم. حاول مرة أخرى.",
                icon: "error",
                confirmButtonText: "حسناً"
            });
        });
    });

    // Fetch user details from API
    function getUserDetails(userId) {
        return fetch(`http://localhost:5097/api/Order/${userId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Error fetching user details: ${response.statusText}`);
                }
                return response.json();
            })
            .then(data => ({
                userName: data.name || "اسم العميل",
                userPhoneNumber: data.phoneNumber || "رقم الهاتف"
            }))
            .catch(error => {
                console.error("Error:", error);
                Swal.fire({
                    title: "خطأ",
                    text: `لم نتمكن من تحميل بيانات المستخدم: ${error.message}`,
                    icon: "error",
                    confirmButtonText: "حسناً"
                });
            });
    }

    // Create the order
   function createOrder(userDetails) {
    const userId = localStorage.getItem("userId");
    const amount = parseFloat(document.getElementById("order-total").textContent.replace(" JD", "")) || 0;
    const deliveryCost = parseFloat(document.getElementById("shipping-cost").textContent.replace(" JD", "")) || 0;
    const cartItems = JSON.parse(localStorage.getItem("cart")) || [];
    const deliveryOption = document.getElementById("delivery-option").value; // Get delivery type

    // Validate cart items
    if (cartItems.length === 0) {
        Swal.fire({
            title: "سلة التسوق فارغة",
            text: "يرجى إضافة عناصر إلى السلة قبل المتابعة.",
            icon: "info",
            confirmButtonText: "حسناً"
        }).then(() => {
            window.location.href = "shop-4cols.html";
        });
        return;
    }

    // Validate address input
    const addressInput = document.getElementById("addressInput").value.trim();
    if (!addressInput && deliveryOption === "delivery") {
        Swal.fire({
            title: "العنوان مطلوب",
            text: "يرجى إدخال عنوانك قبل المتابعة.",
            icon: "warning",
            confirmButtonText: "حسناً"
        });
        return;
    }

    const branchSelect = document.getElementById("branchSelect"); // Pickup dropdown
    const selectedBranch = branchSelect.options[branchSelect.selectedIndex].textContent.trim(); // Text of selected option

    const nearestBranchElement = document.getElementById("nearestBranch"); // Nearest branch element
    const nearestBranch = nearestBranchElement.textContent.replace("أقرب فرع: ", "").trim(); // Extract branch name

    const { userName, userPhoneNumber } = userDetails;

    const orderItems = cartItems.map(item => ({
        productId: item.productId,
        quantity: item.quantity,
        shopId: item.shopId
    }));

    // Validate product IDs
    if (orderItems.some(item => item.productId === undefined)) {
        Swal.fire({
            title: "خطأ",
            text: "هناك مشكلة في العناصر الموجودة في سلة التسوق. تحقق من العناصر وأعد المحاولة.",
            icon: "error",
            confirmButtonText: "حسناً"
        });
        return;
    }

    const orderData = {
        userId: parseInt(userId),
        amount: amount,
        deliveryCost: deliveryCost,
        name: userName,
        address: addressInput,
        phoneNumber: userPhoneNumber,
        branch: deliveryOption === "pickup" ? selectedBranch : nearestBranch, // Use selectedBranch for pickup, nearestBranch for delivery
        nearestBranch: nearestBranch, // Always store the nearest branch for record
        customerLatitude: parseFloat(document.getElementById("customerLata").value) || 0,
        customerLongitude: parseFloat(document.getElementById("customerLnga").value) || 0,
        regionName: document.getElementById("RegionName").value || "Unknown Region",
        distanceToBranch: parseFloat(document.getElementById("distance").innerText) || 0,
        orderType: deliveryOption, // Delivery or Pickup
        orderItems: orderItems
    };

    console.log("Order Data:", orderData);

    // Send POST request to create the order
    fetch("http://localhost:5097/api/Order/Checkout", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(orderData)
    })
        .then(response => {
            if (!response.ok) {
                throw new Error(`Error creating order: ${response.statusText}`);
            }
            return response.json();
        })
        .then(data => {
            Swal.fire({
                title: "نجاح",
                text: "لقد تم تسجيل الطلب بنجاح.",
                icon: "success",
                confirmButtonText: "حسناً"
            }).then(() => {
                localStorage.removeItem("cart");
                location.reload();
            });
        })
        .catch(error => {
            Swal.fire({
                title: "خطأ",
                text: "حدث خطأ أثناء إنشاء الطلب. حاول مرة أخرى.",
                icon: "error",
                confirmButtonText: "حسناً"
            });
            console.error("Error:", error); }); }

</script>

    <script src="~/assets/js/tabs.js"></script>
</body>
</html>
