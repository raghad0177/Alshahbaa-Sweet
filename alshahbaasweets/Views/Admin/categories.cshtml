@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<body>
    <!-- Categories Section -->
    <section class="container-fluid p-4">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-12">
                <!-- Page header -->
                <div class="border-bottom pb-3 mb-3 d-lg-flex align-items-center justify-content-between">
                    <div>
                        <h1 class="mb-0 h2 fw-bold">Categories</h1>
                        <!-- Breadcrumb -->
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="@Url.Action("Users", "Admin")">Dashboard</a>
                                </li>
                                <li class="breadcrumb-item active" aria-current="page">
                                    Manage Categories
                                </li>
                            </ol>
                        </nav>
                    </div>
                    <!-- Button aligned to the right of the row -->
                    <div class="ms-auto">
                        <a href="/Admin/AddCategory" class="btn btn-primary">Add Category</a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Table -->
    <div class="card rounded-3">
        <div class="p-4">
            <!-- Search Input with Icon -->
            <div class="input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="search" class="form-control ps-6" id="categoryFilter" placeholder="Filter Categories" oninput="filterCategories()">
            </div>
        </div>
        <div class="table-responsive">
            <table class="table mb-0 text-nowrap table-hover table-centered">
                <thead class="table-light">
                    <tr>
                        <th>
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="checkAll">
                                <label class="form-check-label" for="checkAll"></label>
                            </div>
                        </th>
                        <th>Categories</th>
                        <th>Status</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="categoriesTable"></tbody>
            </table>
        </div>
    </div>
    </section>

    <script>
        let categoriesData = [];

        async function fetchCategories() {
            const url = '/api/Categories';
            try {
                const response = await fetch(url);
                if (!response.ok) throw new Error(`Error fetching categories: ${response.statusText}`);

                const data = await response.json();
                categoriesData = data.$values || data; // Store the fetched data
                renderCategories(categoriesData); // Render the full category list initially
            } catch (error) {
                console.error(error);
            }
        }

        function renderCategories(categories) {
            const tableBody = document.getElementById("categoriesTable");
            tableBody.innerHTML = categories.map(category => `
                    <tr>
                        <td>
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input">
                                <input type="hidden" value="${category.categoryId}">
                            </div>
                        </td>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="${category.image || '/default.jpg'}" alt="${category.name}" class="img-4by3-md rounded">
                                <div class="ms-3"><h5>${category.name || 'No Name'}</h5></div>
                            </div>
                        </td>
                        <td><span class="badge bg-success">Active</span></td>
                        <td>${category.description || 'No Description'}</td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-ghost dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    <i class="fe fe-more-vertical"></i>
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" href="/Admin/EditCategory/${category.categoryId}"><i class="fe fe-edit"></i> Edit</a>
                                    <a class="dropdown-item text-danger" href="#" onclick="deleteCategory(${category.categoryId})"><i class="fe fe-trash"></i> Delete</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                `).join('');
        }

        function filterCategories() {
            const filterText = document.getElementById("categoryFilter").value.toLowerCase();
            const filteredCategories = categoriesData.filter(category =>
                category.name.toLowerCase().includes(filterText) ||
                category.description.toLowerCase().includes(filterText)
            );
            renderCategories(filteredCategories); // Render filtered categories
        }

        async function deleteCategory(id) {
            if (!confirm("Are you sure you want to delete this category?")) return;
            try {
                const response = await fetch(`/api/Categories/${id}`, { method: 'DELETE' });
                if (response.ok) {
                    alert("Category deleted successfully");
                    fetchCategories(); // Refresh the table
                } else {
                    throw new Error("Failed to delete category");
                }
            } catch (error) {
                console.error(error);
            }
        }

        // Initialize on page load
        fetchCategories();
    </script>
    </script>

</body>
</html>
