<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Products</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://codescandy.com/geeks-bootstrap-5/assets/css/theme.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <link href="~/assets/fonts/feather/feather.css" rel="stylesheet" />
    <link href="~/assets/libs/bootstrap-icons/font/bootstrap-icons.min.css" rel="stylesheet" />
    <link href="~/assets/libs/simplebar/dist/simplebar.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/assets/css/theme.min.css">
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
</head>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<body>
    <!-- Container fluid -->
    <section class="container-fluid p-4">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-12">
                <!-- Page header -->
                <div class=" mb-3 d-lg-flex align-items-center justify-content-between">
                    <div>
                        <h1 class="mb-0 h2 fw-bold">Products</h1>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="@Url.Action("Users", "Admin")">Dashboard</a>
                                </li>
                                <li class="breadcrumb-item active" aria-current="page">
                                    Add Product
                                </li>
                            </ol>
                        </nav>
                    </div>
                    <div class="d-flex align-items-center">
                        <!-- Add Product Button -->
                        <a href="@Url.Action("AddMenuProducts", "Admin")" class="btn btn-primary">Add Product</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Table for Products -->
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Category</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="productList">
                    <!-- Dynamic product rows will be inserted here -->
                </tbody>
            </table>
        </div>
    </section>

    <script>
        $(document).ready(function () {
            let categoriesMap = {};
            // Fetch categories and build the categories map
            fetch('http://localhost:5097/api/Categories')
                .then(response => response.json())
                .then(categories => {
                    console.log("Categories data received from API:", categories);
                    categories = categories.$values || categories;

                    if (!Array.isArray(categories)) {
                        console.error("Categories data is not an array. Check API response format.");
                        throw new Error("Categories data is not an array");
                    }

                    categories.forEach(category => {
                        categoriesMap[category.categoryId] = category.name;
                    });

                    return fetch('http://localhost:5097/api/Products');
                })
                .then(response => response.json())
                .then(products => {
                    products = products.$values || products;

                    if (!Array.isArray(products)) {
                        console.error("Products data is not an array. Check API response format.");
                        throw new Error("Products data is not an array");
                    }

                    const productList = $('#productList');

                    products.forEach(product => {
                        const imageUrl = `http://localhost:5097${product.image}`;
                        const productHTML = `
                            <tr>
                                <td>
                                    <img src="${imageUrl}" alt="${product.name}" style="width: 50px; height: auto;">
                                    ${product.name}
                                </td>
                                <td>${product.price} JD</td>
                                <td>${categoriesMap[product.categoryId] || 'N/A'}</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-secondary" onclick="editProduct(${product.productId})">
                                        Edit
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteProduct(${product.productId})">
                                        Delete
                                    </button>
                                </td>
                            </tr>`;
                        productList.append(productHTML);
                    });
                })
                .catch(error => {
                    console.error('Failed to fetch data:', error);
                    $('#productList').html('<tr><td colspan="5">Error loading products.</td></tr>');
                });
        });

        function editProduct(productId) {
            localStorage.setItem('productId', productId);
            window.location.href = `/Admin/editmenuproducts?productId=${productId}`;
        }

        function deleteProduct(productId) {
            if (confirm("Are you sure you want to delete this product?")) {
                fetch(`http://localhost:5097/api/Products/${productId}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (!response.ok) throw new Error('Failed to delete the product');
                        alert('Product deleted successfully!');
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Error deleting product:', error);
                        alert('Failed to delete product: ' + error.message);
                    });
            }
        }
    </script>
</body>
</html>
